<class
    name = "zp_server"
    title = "ZeroMq Pipes Server"
    script = "zproto_server_c"
    protocol_class = "zp_proto"
    package_dir = "../include"
    project_header = "zp_classes.h"
    export_macro = "ZP_EXPORT"
    >
    This is a server implementation of the ZeroMq Pipes Protocol
    <include filename = "../license.xml" />

    <state name = "start" inherit = "defaults">
        <event name = "CONNECTION OPEN" next = "connected">
            <action name = "register new client" />
            <action name = "send" message = "OK" />
        </event>
        <event name = "*">
            <action name = "signal command invalid" />
            <action name = "send" message = "ERROR" />
        </event>
    </state>
    
    <state name = "connected" inherit = "defaults">
        <!-- Remote code execution -->
        <event name = "EXEC" >
            <action name = "exec new process" />
            <action name = "send" message = "EXEC-STATUS-REPLY" />
        </event>
        <event name = "EXEC-STATUS-GET" >
            <action name = "exec status get" />
            <action name = "send" message = "EXEC-STATUS-REPLY" />
        </event>
        <event name = "EXEC-LIST" >
            <action name = "exec list" />
            <action name = "send" message = "EXEC-LIST-REPLY" />
        </event>
        <event name = "EXEC-CANCEL" >
            <action name = "exec list" />
            <action name = "send" message = "EXEC-STATUS-REPLY" />
        </event>
    </state>
    
    <state name = "defaults">
        <event name = "CONNECTION CLOSE" next = "settling">
            <action name = "send" message = "OK" />
            <action name = "client closed connection" />
            <action name = "deregister the client" />
            <action name = "allow time to settle" />
        </event>
        <!-- This built-in event hits on a client timeout -->
        <event name = "expired" next = "settling">
            <action name = "client expired" />
            <action name = "deregister the client" />
            <action name = "allow time to settle" />
        </event>
        <!-- Client tried to do something we don't allow yet -->
        <event name = "exception" next = "settling">
            <action name = "signal operation failed" />
            <action name = "send" message = "ERROR" />
            <action name = "client had exception" />
            <action name = "deregister the client" />
            <action name = "allow time to settle" />
        </event>
        <!-- All other protocol messages are invalid -->
        <event name = "*" next = "settling">
            <action name = "signal command invalid" />
            <action name = "send" message = "ERROR" />
            <action name = "deregister the client" />
            <action name = "allow time to settle" />
        </event>
    </state>
    
    <state name = "settling">
        <event name = "settled">
            <action name = "terminate" />
        </event>
        <event name = "CONNECTION OPEN" next = "connected">
            <action name = "register new client" />
            <action name = "send" message = "OK" />
        </event>
        <!-- All other protocol messages are invalid, tell this to the client -->
        <event name = "*">
            <action name = "signal command invalid" />
            <action name = "send" message = "ERROR" />
        </event>
    </state>
</class>
